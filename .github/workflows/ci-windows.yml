name: CI windows

on:
  push:
    branches: [ master ]
  release:
    types: [created]

jobs:

  build:
    name: CI on Windows

    runs-on: windows-2022

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install toolchain
      uses: ada-actions/toolchain@ce2021
      with:
        distrib: community
    
    - name: Install OpenSSL on MSYS2
      run: |
        C:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-openssl
        Copy-Item -Path "C:\msys64\mingw64\include\openssl" -Destination "D:\a\_temp\gnat-2021-20210519-x86_64-windows64-bin\x86_64-w64-mingw32\include" -Recurse
        Copy-Item "C:\msys64\mingw64\lib\libssl.*" -Destination "D:\a\_temp\gnat-2021-20210519-x86_64-windows64-bin\lib"
        Copy-Item "C:\msys64\mingw64\lib\libcrypto.*" -Destination "D:\a\_temp\gnat-2021-20210519-x86_64-windows64-bin\lib"
        mkdir bin
        Copy-Item "C:\msys64\mingw64\bin\libcrypto-1_1-x64.dll" -Destination "bin"
        Copy-Item "C:\msys64\mingw64\share\licenses\openssl\LICENSE" -Destination ".\LICENSE.OpenSSL"

    - name: Build release
      run: >
        gprbuild -P vaniton.gpr -XBUILD=RELEASE -j0
    
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: vaniton-bin-windows.zip
        path: |
          bin/vaniton.exe
          bin/mnemonic2address.exe
          bin/libcrypto-1_1-x64.dll
          README.md
          LICENSE.txt
          LICENSE.OpenSSL

    # Release steps
    - name: Package binaries
      if: (github.event_name == 'release')
      run: C:\msys64\usr\bin\zip vaniton-bin-windows.zip bin/vaniton.exe bin/mnemonic2address.exe bin/libcrypto-1_1-x64.dll README.md LICENSE.txt LICENSE.OpenSSL

    - name: Retrieve upload URL for the release
      if: (github.event_name == 'release')
      id: get_release
      uses: bruceadams/get-release@v1.2.1
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Get release version
      if: (github.event_name == 'release')
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Upload binary assets
      if: (github.event_name == 'release')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: vaniton-bin-windows.zip
        asset_name: vaniton-${{ steps.get_version.outputs.version-without-v }}-bin-x86_64-windows.zip
        asset_content_type: application/zip
