pragma Ada_2012;
package body Contracts is
   Wallet_Code_Simple_R1 : constant Cell :=
     From_BoC
       ("B5EE9C72410101010044000084FF0020DDA4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED5441FDF089");
   Wallet_Code_Simple_R2 : constant Cell :=
     From_BoC
       ("B5EE9C724101010100530000A2FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54D0E2786F");

   Wallet_Code_Simple_R3 : constant Cell :=
     From_BoC
       ("B5EE9C7241010101005F0000BAFF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54B5B86E42");

   Wallet_Code_V2_R1 : constant Cell :=
     From_BoC
       ("B5EE9C724101010100570000AAFF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54A1370BB6");

   Wallet_Code_V2_R2 : constant Cell :=
     From_BoC
       ("B5EE9C724101010100630000C2FF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54044CD7A1");

   Wallet_Code_V3_R1 : constant Cell :=
     From_BoC
       ("B5EE9C724101010100620000C0FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED543FBE6EE0");

   Wallet_Code_V3_R2 : constant Cell :=
     From_BoC
       ("B5EE9C724101010100710000DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5410BD6DAD");

   Wallet_Code_V4_R1 : constant Cell :=
     From_BoC
       ("B5EE9C72410215010002F5000114FF00F4A413F4BCF2C80B010201200203020148040504F8F28308D71820D31FD31FD31F02F823BBF263ED44D0D31FD31FD3FFF404D15143BAF2A15151BAF2A205F901541064F910F2A3F80024A4C8CB1F5240CB1F5230CBFF5210F400C9ED54F80F01D30721C0009F6C519320D74A96D307D402FB00E830E021C001E30021C002E30001C0039130E30D03A4C8CB1F12CB1FCBFF1112131403EED001D0D3030171B0915BE021D749C120915BE001D31F218210706C7567BD228210626C6E63BDB022821064737472BDB0925F03E002FA403020FA4401C8CA07CBFFC9D0ED44D0810140D721F404305C810108F40A6FA131B3925F05E004D33FC8258210706C7567BA9131E30D248210626C6E63BAE30004060708020120090A005001FA00F404308210706C7567831EB17080185005CB0527CF165003FA02F40012CB69CB1F5210CB3F0052F8276F228210626C6E63831EB17080185005CB0527CF1624FA0214CB6A13CB1F5230CB3F01FA02F4000092821064737472BA8E3504810108F45930ED44D0810140D720C801CF16F400C9ED54821064737472831EB17080185004CB0558CF1622FA0212CB6ACB1FCB3F9410345F04E2C98040FB000201200B0C0059BD242B6F6A2684080A06B90FA0218470D4080847A4937D29910CE6903E9FF9837812801B7810148987159F31840201580D0E0011B8C97ED44D0D70B1F8003DB29DFB513420405035C87D010C00B23281F2FFF274006040423D029BE84C600201200F100019ADCE76A26840206B90EB85FFC00019AF1DF6A26840106B90EB858FC0006ED207FA00D4D422F90005C8CA0715CBFFC9D077748018C8CB05CB0222CF165005FA0214CB6B12CCCCC971FB00C84014810108F451F2A702006C810108D718C8542025810108F451F2A782106E6F746570748018C8CB05CB025004CF16821005F5E100FA0213CB6A12CB1FC971FB00020072810108D718305202810108F459F2A7F82582106473747270748018C8CB05CB025005CF16821005F5E100FA0214CB6A13CB1F12CB3FC973FB00000AF400C9ED5446A9F34F");

   Wallet_Code_V4_R2 : constant Cell :=
     From_BoC


   function Create
     (Public_Key : Byte_Array; Workchain : Integer_8 := 0;
      Kind       : Wallet_Contract := Wallet_Contract_V3_R2) return Contract
   is
      Result : Contract;
   begin
      Result.Kind      := Kind;
      Result.Workchain := Workchain;

      case Result.Kind is
         when Wallet_Contract_Simple_R1 =>
            Result.Code := Wallet_Code_Simple_R1;
         when Wallet_Contract_Simple_R2 =>
            Result.Code := Wallet_Code_Simple_R2;
         when Wallet_Contract_Simple_R3 =>
            Result.Code := Wallet_Code_Simple_R3;
         when Wallet_Contract_V2_R1 =>
            Result.Code := Wallet_Code_V2_R1;
         when Wallet_Contract_V2_R2 =>
            Result.Code := Wallet_Code_V2_R2;
         when Wallet_Contract_V3_R1 =>
            Result.Code := Wallet_Code_V3_R1;
         when Wallet_Contract_V3_R2 =>
            Result.Code := Wallet_Code_V3_R2;
         when Wallet_Contract_V4_R1 =>
            Result.Code := Wallet_Code_V4_R1;
         when Wallet_Contract_V4_R2 =>
            Result.Code := Wallet_Code_V4_R2;
      end case;

      case Result.Kind is
         when Wallet_Contract_Simple_R1 | Wallet_Contract_Simple_R2 |
           Wallet_Contract_Simple_R3 | Wallet_Contract_V2_R1 |
           Wallet_Contract_V2_R2 =>
            Result.Data := Empty_Cell;
            Write (Result.Data, Unsigned_32 (0));
            Write (Result.Data, Public_Key);
         when Wallet_Contract_V3_R1 | Wallet_Contract_V3_R2 =>
            Result.Data := Empty_Cell;
            Write (Result.Data, Unsigned_32 (0));
            Write
              (Result.Data,
               Unsigned_32 (698_983_191 + Integer (Result.Workchain)));
            Write (Result.Data, Public_Key);
         when Wallet_Contract_V4_R1 | Wallet_Contract_V4_R2 =>
            Write (Result.Data, Unsigned_32 (0));
            Write
              (Result.Data,
               Unsigned_32 (698_983_191 + Integer (Result.Workchain)));
            Write (Result.Data, Public_Key);
            Write (Result.Data, False);
      end case;

      return Result;
   end Create;

   function Get_Address (This_Original : in Contract) return Address is
      This : Contract := This_Original;

      State_Init       : Cell               := Empty_Cell;
      State_Init_Array : Bit_Array (1 .. 5) :=
        (False, -- split depth
         False, -- tick tock
         True, -- code
         True, -- data
         False -- library
      );

   begin
      Write (State_Init, State_Init_Array);
      Append_Reference
        (State_Init, This.Code'Unchecked_Access); -- Live fast, use Unchecked_
      Append_Reference (State_Init, This.Data'Unchecked_Access);

      declare
         State_Init_Hash : Byte_Array := Hash (State_Init);
      begin
         return Create (False, True, This.Workchain, State_Init_Hash);
      end;
   end Get_Address;
end Contracts;
